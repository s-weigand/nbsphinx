name: "Tests"
on: [push, pull_request]

jobs:
  # flake8:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Set up Python 3.7
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.7
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install flake8
  #     - name: Lint with flake8
  #       run: |
  #         flake8 src

  test-sphinx-versions:
    runs-on: ubuntu-latest
    env:
      SPHINX: ${{ matrix.SPHINX }}
      BIBTEX: ${{ matrix.BIBTEX }}
      NOT_NITPICKY: ${{ matrix.NOT_NITPICKY }}
      ARTIFACT_DIR: artifact_upload/docs-sphinx${{ matrix.SPHINX }}

    strategy:
      matrix:
        SPHINX: ["1.8.1", "1.8.5", "2.0.0", "2.2.0", "2.4.0"]
        NOT_NITPICKY: ["-Dnitpicky=0"]
        include:
          - SPHINX: "1.8.1"
            BIBTEX: "==0.4.2"
          - SPHINX: "1.8.5"
            BIBTEX: "==0.4.2"
          - SPHINX: "3.0.0"
            NOT_NITPICKY: ""
          - SPHINX: "3.1.0"
            NOT_NITPICKY: ""

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          activate-conda: false
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          conda install -y pandoc librsvg tectonic
          python -m pip install -U pip wheel
          python -m pip install Sphinx==$SPHINX
          python -m pip install .
          python -m pip install $(grep -iv bibtex doc/requirements.txt)
          python -m pip install sphinxcontrib-bibtex$BIBTEX
      - name: Show installed dependencies and create artifact folder
        if: always()
        run: |
          python --version
          python -c "import nbsphinx; print('nbsphinx.__version__==', nbsphinx.__version__)"
          pandoc -v
          pip freeze
          mkdir -p $ARTIFACT_DIR
      - name: Build docs HTML
        run: |
          python -m sphinx doc/ _build/html/ -a -W $NOT_NITPICKY -Dsuppress_warnings=git.too_shallow -b html
          rm -rf _build/html/.doctrees
          mv _build/* ${{ env.ARTIFACT_DIR }}/
      - name: Build docs LaTeX
        run: |
          python -m sphinx doc/ _build/latex/ -a -W $NOT_NITPICKY -Dsuppress_warnings=git.too_shallow -b latex
          rm -rf _build/latex/.doctrees
          mv _build/* ${{ env.ARTIFACT_DIR }}/
      - name: Build docs ePub
        run: |
          python -m sphinx doc/ _build/epub/ -a -W $NOT_NITPICKY -Dsuppress_warnings=git.too_shallow,epub.unknown_project_files -b epub
          rm -rf _build/epub/.doctrees
          rm -f _build/epub/_images/python:nbsphinx.svg
          mv _build/* ${{ env.ARTIFACT_DIR }}/
      - name: Cache Tectonic Packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-packages
      - name: Build PDF from LaTeX
        run: |
          tectonic ${{ env.ARTIFACT_DIR }}/latex/nbsphinx.tex
          rm -f ${{ env.ARTIFACT_DIR }}/latex/python:nbsphinx.pdf
      - name: Upload _build folder
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: artifact_upload

  test-python-versions:
    runs-on: ${{ matrix.os }}
    env:
      ARTIFACT_DIR: artifact_upload/${{ matrix.os }}-py${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.5, 3.6, 3.7, "pypy3"]
        include:
          - python-version: 3.8
            os: ubuntu-latest
          - python-version: 3.8
            os: macos-latest
          # - python-version: 3.8
          #   os: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          activate-conda: false
          conda-channels: conda-forge
      - name: Install dependencies and create artifact folder
        run: |
          conda install -y pandoc librsvg tectonic
          python -m pip install -U pip wheel
          python -m pip install Sphinx
          python -m pip install .
          python -m pip install --prefer-binary -r doc/requirements.txt
          mkdir -p ${{ env.ARTIFACT_DIR }}
      - name: Show installed dependencies
        if: always()
        run: |
          python --version
          python -c "import nbsphinx; print('nbsphinx.__version__==', nbsphinx.__version__)"
          pandoc -v
          pip freeze
      - name: Build docs HTML
        run: |
          python -m sphinx doc/ _build/html/ -a -W -Dsuppress_warnings=git.too_shallow -b html
          rm -rf _build/html/.doctrees
          mv _build/* ${{ env.ARTIFACT_DIR }}/
      - name: Build docs LaTeX
        run: |
          python -m sphinx doc/ _build/latex/ -a -W -Dsuppress_warnings=git.too_shallow -b latex
          rm -rf _build/latex/.doctrees
          mv _build/* ${{ env.ARTIFACT_DIR }}/
      - name: Build docs ePub
        run: |
          python -m sphinx doc/ _build/epub/ -a -W -Dsuppress_warnings=git.too_shallow,epub.unknown_project_files -b epub
          rm -rf _build/epub/.doctrees
          mv _build/* ${{ env.ARTIFACT_DIR }}/
      - name: Cache Tectonic Packages Linux
        if: runner.os == 'Linux'
        uses: actions/cache@v1
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-packages
      - name: Cache Tectonic Packages MacOs
        if: runner.os == 'macOS'
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/Tectonic
          key: ${{ runner.os }}-tectonic-packages
      # - name: Cache Tectonic Packages Windows
      #   if: runner.os == 'windows-latest'
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/Library/Caches/Tectonic
      #     key: ${{ runner.os }}-tectonic-packages
      - name: Build PDF from LaTeX
        run: tectonic $ARTIFACT_DIR/latex/nbsphinx.tex
      - name: Upload _build folder
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: artifact_upload

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test-sphinx-versions, test-python-versions]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -U .
      - name: Build dist
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
